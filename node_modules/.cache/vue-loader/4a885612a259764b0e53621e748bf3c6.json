{"remainingRequest":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/src/views/Introduccion.vue?vue&type=template&id=f1e8a926&lang=pug&","dependencies":[{"path":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/src/views/Introduccion.vue","mtime":1745167019798},{"path":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U2_Investigacion_Operaciones/U2_Investigacion_Operaciones/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}